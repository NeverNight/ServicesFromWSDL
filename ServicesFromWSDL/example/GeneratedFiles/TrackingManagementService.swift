//
//  TrackingManagementService.swift

//  Automatically created by ServicesFromWSDL.
//  Copyright (c) 2016 Farbflash. All rights reserved.

// DO NOT EDIT THIS FILE!
// This file was automatically generated from a wsdl definitions wsdl file)
// Edit the source data and then use the ServicesFromWSDL
// to create the corresponding services files automatically

import Foundation
import DLRModels

struct TrackingManagementService {
    private let connector: ServerServicesConnector
    enum DTOServiceError: Error {
        case none, unableToCreateDTO
    }

    init(connector: ServerServicesConnector) {
        self.connector = connector
    }

    func setTrackingAction(input: SetTrackingActionRequest, completion: ((Error?) -> Void)?) {
        call("setTrackingAction", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    func getTracks(input: GetTracksRequest, completion: ((GetTracksResponse?, Error?) -> Void)?) {
        call("getTracks", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    func setSensorData(input: SetSensorDataRequest, completion: ((GetPersonsResponse?, Error?) -> Void)?) {
        // replaced protocol type: SessionResponse with concrete subclass: GetPersonsResponse
        call("setSensorData", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    func addTrack(input: AddTrackRequest, completion: ((AddTrackResponse?, Error?) -> Void)?) {
        call("addTrack", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    func updateTrack(input: UpdateTrackRequest, completion: ((GetPersonsResponse?, Error?) -> Void)?) {
        // replaced protocol type: SessionResponse with concrete subclass: GetPersonsResponse
        call("updateTrack", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    func deleteTracks(input: DeleteTracksRequest, completion: ((GetPersonsResponse?, Error?) -> Void)?) {
        // replaced protocol type: SessionResponse with concrete subclass: GetPersonsResponse
        call("deleteTracks", parameters: ["req": input.jsobjRepresentation], completion: completion)
    }

    private func call<T: JSOBJSerializable>(_ function: String, parameters: JSOBJ?, completion: ((T?, Error?) -> Void)?) {
        connector.callWSDLFunction(named: function, parameters: parameters, in: "tracking") { (rslt, error) in
            if let error = error { completion?(nil, error) }
            else {
                if let obj = T(jsonData: (rslt as? [String: Any])?["return"] as? JSOBJ) { completion?(obj, nil) }                else { completion?(nil, DTOServiceError.unableToCreateDTO) }
            }
        }
    }

    private func call(_ function: String, parameters: JSOBJ?, completion: ((Error?) -> Void)?) {
        connector.callWSDLFunction(named: function, parameters: parameters, in: "tracking") { (rslt, error) in
            completion?(error)
        }
    }
}
